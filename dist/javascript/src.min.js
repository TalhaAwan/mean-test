!function(){angular.module("boilerplate",["ngRoute","appRoutes","ngMaterial","mainCtrl","smart-table"])}(),function(){angular.module("appRoutes",[]).config(["$routeProvider","$locationProvider","$httpProvider",function(e,n,t){e.when("/",{templateUrl:"app/main/main.html",controller:"mainController"}).when("/sign-in",{templateUrl:"app/auth/signin.html",controller:"signInController"}).when("/sign-up",{templateUrl:"app/auth/signup.html",controller:"signUpController"}).otherwise({redirectTo:"/"}),n.html5Mode(!0),t.interceptors.push("authHttpResponseInterceptor")}]).factory("authHttpResponseInterceptor",["$q","$location",function(e,n){return{request:function(e){var n=localStorage.userToken;return e.headers.token=n,e},response:function(n){return n.status,n||e.when(n)},responseError:function(t){return 401===t.status&&(localStorage.removeItem("userToken"),n.path("/")),e.reject(t)}}}])}(),function(){angular.module("boilerplate").factory("authService",["$http",function(e){return{create:function(n,t,o){e.post("/api/users/",n).success(function(e){t(e)}).error(function(e){o(e)})},localAuth:function(n,t,o){e.post("/api/auth/local",n).success(function(e){t(e)}).error(function(e){o(e)})}}}])}(),function(){angular.module("boilerplate").controller("signInController",["$scope","authService",function(e,n){}])}(),function(){angular.module("boilerplate").controller("signUpController",["$scope","authService",function(e,n){}])}(),function(){angular.module("mainCtrl",[]).controller("mainController",["$scope","userService",function(e,n){n.getAll(function(n){console.log(n),e.users=n},function(e){console.log(e)})}])}(),function(){angular.module("boilerplate").factory("userService",["$http",function(e){return{create:function(n,t,o){e.post("/api/ping/",n).success(function(e){t(e)}).error(function(e){o(e)})},get:function(n,t,o){e.get("/api/user/"+n).success(function(e){t(e)}).error(function(e){o(e)})},getAll:function(n,t){e.get("/api/users").success(function(e){n(e)}).error(function(e){t(e)})},delete:function(n,t,o){e.delete("/api/delete"+n).success(function(e){t(e)}).error(function(e){o(e)})}}}])}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
