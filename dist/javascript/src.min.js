!function(){angular.module("boilerplate",["ngRoute","appRoutes","mainCtrl","smart-table"])}(),function(){angular.module("appRoutes",[]).config(["$routeProvider","$locationProvider","$httpProvider",function(n,e,t){n.when("/",{templateUrl:"app/main/main.html",controller:"mainController"}).when("/sign-in",{templateUrl:"app/auth/signin.html",controller:"signInController"}).when("/sign-up",{templateUrl:"app/auth/signup.html",controller:"signUpController"}).otherwise({redirectTo:"/"}),e.html5Mode(!0),t.interceptors.push("authHttpResponseInterceptor")}]).factory("authHttpResponseInterceptor",["$q","$location",function(n,e){return{request:function(n){var e=localStorage.userToken;return n.headers.token=e,n},response:function(e){return e.status,e||n.when(e)},responseError:function(t){return 401===t.status&&(localStorage.removeItem("userToken"),e.path("/")),n.reject(t)}}}])}(),function(){angular.module("boilerplate").factory("authService",["$http",function(n){return{create:function(e,t,o){n.post("/api/users/",e).success(function(n){t(n)}).error(function(n){o(n)})},localAuth:function(e,t,o){n.post("/api/auth/local",e).success(function(n){t(n)}).error(function(n){o(n)})}}}])}(),function(){angular.module("boilerplate").controller("signInController",["$scope","authService",function(n,e){}])}(),function(){angular.module("boilerplate").controller("signUpController",["$scope","authService",function(n,e){}])}(),function(){angular.module("mainCtrl",[]).controller("mainController",["$scope","userService","$timeout",function(n,e,t){n.user={},e.getAll(function(e){n.users=e},function(n){console.log(n)}),n.ping=function(){n.user.disableBtn=!0,e.create(n.user,function(e){n.users.push(e),n.user={}},function(e){console.log(e),n.pingErrorMsg=e.message||"something went wrong",t(function(){n.pingErrorMsg=""},3e3)})},n.update=function(o,r){o.disableBtn=!0,e.update(o,function(e){n.users[r]=e},function(e){console.log(e),o.disableBtn=!1,n.pingErrorMsg=e.message||"something went wrong",t(function(){n.pingErrorMsg=""},3e3)})},n.delete=function(o,r){o.disableBtn=!0,e.delete({id:o.id},function(){n.users.splice(r,1)},function(e){console.log(e),o.disableBtn=!1,n.pingErrorMsg=e.message||"something went wrong",t(function(){n.pingErrorMsg=""},3e3)})}}])}(),function(){angular.module("boilerplate").factory("userService",["$http",function(n){return{create:function(e,t,o){n.post("/api/ping/",e,{}).success(function(n){t(n)}).error(function(n){o(n)})},update:function(e,t,o){n.put("/api/update/",e,{}).success(function(n){t(n)}).error(function(n){o(n)})},get:function(e,t,o){n.get("/api/user/"+e).success(function(n){t(n)}).error(function(n){o(n)})},getAll:function(e,t){n.get("/api/users").success(function(n){e(n)}).error(function(n){t(n)})},delete:function(e,t,o){console.log(e),n({url:"/api/delete",method:"DELETE",data:e,headers:{"Content-Type":"application/json;charset=utf-8"}}).then(function(n){t(n)},function(n){o(n)})}}}])}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
